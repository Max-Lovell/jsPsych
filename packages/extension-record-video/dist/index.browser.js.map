{"version":3,"file":"index.browser.js","sources":["../../../node_modules/auto-bind/index.js","../src/index.ts"],"sourcesContent":["'use strict';\n\n// Gets all non-builtin properties up the prototype chain\nconst getAllProperties = object => {\n\tconst properties = new Set();\n\n\tdo {\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tproperties.add([object, key]);\n\t\t}\n\t} while ((object = Reflect.getPrototypeOf(object)) && object !== Object.prototype);\n\n\treturn properties;\n};\n\nmodule.exports = (self, {include, exclude} = {}) => {\n\tconst filter = key => {\n\t\tconst match = pattern => typeof pattern === 'string' ? key === pattern : pattern.test(key);\n\n\t\tif (include) {\n\t\t\treturn include.some(match);\n\t\t}\n\n\t\tif (exclude) {\n\t\t\treturn !exclude.some(match);\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tfor (const [object, key] of getAllProperties(self.constructor.prototype)) {\n\t\tif (key === 'constructor' || !filter(key)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst descriptor = Reflect.getOwnPropertyDescriptor(object, key);\n\t\tif (descriptor && typeof descriptor.value === 'function') {\n\t\t\tself[key] = self[key].bind(self);\n\t\t}\n\t}\n\n\treturn self;\n};\n","import autoBind from \"auto-bind\";\nimport { JsPsych, JsPsychExtension, JsPsychExtensionInfo, ParameterType } from \"jspsych\";\n\nimport { version } from \"../package.json\";\n\n/**\n * https://www.jspsych.org/latest/extensions/record-video/\n */\nclass RecordVideoExtension implements JsPsychExtension {\n  static info: JsPsychExtensionInfo = {\n    name: \"record-video\",\n    version: version,\n    data: {\n      /** [Base 64 encoded](https://developer.mozilla.org/en-US/docs/Glossary/Base64) representation of the video data. */\n      record_video_data: {\n        type: ParameterType.STRING,\n      },\n    },\n  };\n\n  constructor(private jsPsych: JsPsych) {\n    autoBind(this);\n  }\n\n  private recordedChunks = [];\n  private recorder: MediaRecorder = null;\n  private currentTrialData = null;\n  private trialComplete = false;\n  private onUpdateCallback: () => void = null;\n\n  // todo: add option to stream data to server with timeslice?\n  initialize = async () => {};\n\n  on_start = (): void => {\n    this.recorder = this.jsPsych.pluginAPI.getCameraRecorder();\n    this.recordedChunks = [];\n    this.trialComplete = false;\n    this.currentTrialData = {};\n\n    if (!this.recorder) {\n      console.warn(\n        \"The record-video extension is trying to start but the camera is not initialized. Do you need to run the initialize-camera plugin?\"\n      );\n      return;\n    }\n\n    this.recorder.addEventListener(\"dataavailable\", this.handleOnDataAvailable);\n  };\n\n  on_load = () => {\n    this.recorder.start();\n  };\n\n  on_finish = (): Promise<any> => {\n    return new Promise((resolve) => {\n      this.trialComplete = true;\n      this.recorder.stop();\n\n      if (!this.currentTrialData.record_video_data) {\n        this.onUpdateCallback = () => {\n          resolve(this.currentTrialData);\n        };\n      } else {\n        resolve(this.currentTrialData);\n      }\n    });\n  };\n\n  private handleOnDataAvailable(event) {\n    if (event.data.size > 0) {\n      console.log(\"chunks added\");\n      this.recordedChunks.push(event.data);\n      if (this.trialComplete) {\n        this.updateData();\n      }\n    }\n  }\n\n  private updateData() {\n    const data = new Blob(this.recordedChunks, {\n      type: this.recorder.mimeType,\n    });\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      const base64 = (reader.result as string).split(\",\")[1];\n      this.currentTrialData.record_video_data = base64;\n      if (this.onUpdateCallback) {\n        this.onUpdateCallback();\n      }\n    });\n    reader.readAsDataURL(data);\n  }\n}\n\nexport default RecordVideoExtension;\n"],"names":["autoBind","version","ParameterType"],"mappings":";;;;;;;CAEA;CACA,MAAM,gBAAgB,GAAG,MAAM,IAAI;CACnC,CAAC,MAAM,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;AAC9B;CACA,CAAC,GAAG;CACJ,EAAE,KAAK,MAAM,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;CAC7C,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;CACjC,GAAG;CACH,EAAE,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,MAAM,KAAK,MAAM,CAAC,SAAS,EAAE;AACpF;CACA,CAAC,OAAO,UAAU,CAAC;CACnB,CAAC,CAAC;AACF;KACA,QAAc,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,KAAK;CACpD,CAAC,MAAM,MAAM,GAAG,GAAG,IAAI;CACvB,EAAE,MAAM,KAAK,GAAG,OAAO,IAAI,OAAO,OAAO,KAAK,QAAQ,GAAG,GAAG,KAAK,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7F;CACA,EAAE,IAAI,OAAO,EAAE;CACf,GAAG,OAAO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAC9B,GAAG;AACH;CACA,EAAE,IAAI,OAAO,EAAE;CACf,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAC/B,GAAG;AACH;CACA,EAAE,OAAO,IAAI,CAAC;CACd,EAAE,CAAC;AACH;CACA,CAAC,KAAK,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE;CAC3E,EAAE,IAAI,GAAG,KAAK,aAAa,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;CAC7C,GAAG,SAAS;CACZ,GAAG;AACH;CACA,EAAE,MAAM,UAAU,GAAG,OAAO,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;CACnE,EAAE,IAAI,UAAU,IAAI,OAAO,UAAU,CAAC,KAAK,KAAK,UAAU,EAAE;CAC5D,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CACpC,GAAG;CACH,EAAE;AACF;CACA,CAAC,OAAO,IAAI,CAAC;CACb,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CClCD,MAAM,oBAAiD,CAAA;CAAA,EAYrD,YAAoB,OAAkB,EAAA;CAAlB,IAAA,IAAA,CAAA,OAAA,GAAA,OAAA,CAAA;CAClB,IAAAA,UAAA,CAAS,IAAI,CAAA,CAAA;CAAA,GACf;CAAA,EAbA,OAAO,IAA6B,GAAA;CAAA,IAClC,IAAM,EAAA,cAAA;CAAA,aACNC,gBAAA;CAAA,IACA,IAAM,EAAA;CAAA,MAEJ,iBAAmB,EAAA;CAAA,QACjB,MAAMC,qBAAc,CAAA,MAAA;CAAA,OACtB;CAAA,KACF;CAAA,GACF,CAAA;CAAA,EAMQ,iBAAiB,EAAC,CAAA;CAAA,EAClB,QAA0B,GAAA,IAAA,CAAA;CAAA,EAC1B,gBAAmB,GAAA,IAAA,CAAA;CAAA,EACnB,aAAgB,GAAA,KAAA,CAAA;CAAA,EAChB,gBAA+B,GAAA,IAAA,CAAA;CAAA,EAGvC,aAAa,YAAY;CAAA,GAAC,CAAA;CAAA,EAE1B,WAAW,MAAY;CACrB,IAAA,IAAA,CAAK,QAAW,GAAA,IAAA,CAAK,OAAQ,CAAA,SAAA,CAAU,iBAAkB,EAAA,CAAA;CACzD,IAAA,IAAA,CAAK,iBAAiB,EAAC,CAAA;CACvB,IAAA,IAAA,CAAK,aAAgB,GAAA,KAAA,CAAA;CACrB,IAAA,IAAA,CAAK,mBAAmB,EAAC,CAAA;CAEzB,IAAI,IAAA,CAAC,KAAK,QAAU,EAAA;CAClB,MAAQ,OAAA,CAAA,IAAA;CAAA,QACN,mIAAA;CAAA,OACF,CAAA;CACA,MAAA,OAAA;CAAA,KACF;CAEA,IAAA,IAAA,CAAK,QAAS,CAAA,gBAAA,CAAiB,eAAiB,EAAA,IAAA,CAAK,qBAAqB,CAAA,CAAA;CAAA,GAC5E,CAAA;CAAA,EAEA,UAAU,MAAM;CACd,IAAA,IAAA,CAAK,SAAS,KAAM,EAAA,CAAA;CAAA,GACtB,CAAA;CAAA,EAEA,YAAY,MAAoB;CAC9B,IAAO,OAAA,IAAI,OAAQ,CAAA,CAAC,OAAY,KAAA;CAC9B,MAAA,IAAA,CAAK,aAAgB,GAAA,IAAA,CAAA;CACrB,MAAA,IAAA,CAAK,SAAS,IAAK,EAAA,CAAA;CAEnB,MAAI,IAAA,CAAC,IAAK,CAAA,gBAAA,CAAiB,iBAAmB,EAAA;CAC5C,QAAA,IAAA,CAAK,mBAAmB,MAAM;CAC5B,UAAA,OAAA,CAAQ,KAAK,gBAAgB,CAAA,CAAA;CAAA,SAC/B,CAAA;CAAA,OACK,MAAA;CACL,QAAA,OAAA,CAAQ,KAAK,gBAAgB,CAAA,CAAA;CAAA,OAC/B;CAAA,KACD,CAAA,CAAA;CAAA,GACH,CAAA;CAAA,EAEQ,sBAAsB,KAAO,EAAA;CACnC,IAAI,IAAA,KAAA,CAAM,IAAK,CAAA,IAAA,GAAO,CAAG,EAAA;CACvB,MAAA,OAAA,CAAQ,IAAI,cAAc,CAAA,CAAA;CAC1B,MAAK,IAAA,CAAA,cAAA,CAAe,IAAK,CAAA,KAAA,CAAM,IAAI,CAAA,CAAA;CACnC,MAAA,IAAI,KAAK,aAAe,EAAA;CACtB,QAAA,IAAA,CAAK,UAAW,EAAA,CAAA;CAAA,OAClB;CAAA,KACF;CAAA,GACF;CAAA,EAEQ,UAAa,GAAA;CACnB,IAAA,MAAM,IAAO,GAAA,IAAI,IAAK,CAAA,IAAA,CAAK,cAAgB,EAAA;CAAA,MACzC,IAAA,EAAM,KAAK,QAAS,CAAA,QAAA;CAAA,KACrB,CAAA,CAAA;CACD,IAAM,MAAA,MAAA,GAAS,IAAI,UAAW,EAAA,CAAA;CAC9B,IAAO,MAAA,CAAA,gBAAA,CAAiB,QAAQ,MAAM;CACpC,MAAA,MAAM,MAAU,GAAA,MAAA,CAAO,MAAkB,CAAA,KAAA,CAAM,GAAG,CAAE,CAAA,CAAA,CAAA,CAAA;CACpD,MAAA,IAAA,CAAK,iBAAiB,iBAAoB,GAAA,MAAA,CAAA;CAC1C,MAAA,IAAI,KAAK,gBAAkB,EAAA;CACzB,QAAA,IAAA,CAAK,gBAAiB,EAAA,CAAA;CAAA,OACxB;CAAA,KACD,CAAA,CAAA;CACD,IAAA,MAAA,CAAO,cAAc,IAAI,CAAA,CAAA;CAAA,GAC3B;CACF;;;;;;;;"}