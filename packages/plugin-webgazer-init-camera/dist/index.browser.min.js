var jsPsychWebgazerInitCamera = (function (r) {
  "use strict";
  var p = {
    name: "@jspsych/plugin-webgazer-init-camera",
    version: "2.0.0",
    description: "",
    type: "module",
    main: "dist/index.cjs",
    exports: { import: "./dist/index.js", require: "./dist/index.cjs" },
    typings: "dist/index.d.ts",
    unpkg: "dist/index.browser.min.js",
    files: ["src", "dist"],
    source: "src/index.ts",
    scripts: {
      test: "jest  --passWithNoTests",
      "test:watch": "npm test -- --watch",
      tsc: "tsc",
      build: "rollup --config",
      "build:watch": "npm run build -- --watch",
    },
    repository: {
      type: "git",
      url: "git+https://github.com/jspsych/jsPsych.git",
      directory: "packages/plugin-webgazer-init-camera",
    },
    author: "Josh de Leeuw",
    license: "MIT",
    bugs: { url: "https://github.com/jspsych/jsPsych/issues" },
    homepage: "https://www.jspsych.org/latest/plugins/webgazer-init-camera",
    peerDependencies: { jspsych: ">=7.0.0", "@jspsych/extension-webgazer": ">=1.0.0" },
    devDependencies: {
      "@jspsych/config": "^3.0.0",
      "@jspsych/extension-webgazer": "^1.0.2",
      "@jspsych/test-utils": "^1.2.0",
    },
  };
  const l = {
    name: "webgazer-init-camera",
    version: p.version,
    parameters: {
      instructions: {
        type: r.ParameterType.HTML_STRING,
        default: `
            <p>Position your head so that the webcam has a good view of your eyes.</p>
            <p>Center your face in the box and look directly towards the camera.</p>
            <p>It is important that you try and keep your head reasonably still throughout the experiment, so please take a moment to adjust your setup to be comfortable.</p>
            <p>When your face is centered in the box and the box is green, you can click to continue.</p>`,
      },
      button_text: { type: r.ParameterType.STRING, default: "Continue" },
    },
    data: { load_time: { type: r.ParameterType.INT } },
  };
  class i {
    constructor(s) {
      this.jsPsych = s;
    }
    trial(s, n, y) {
      const t = this.jsPsych.extensions.webgazer;
      let a;
      var h = performance.now(),
        c;
      const b = () => {
          t.pause(), t.hideVideo();
          var e = { load_time: c };
          document.querySelector("#webgazer-center-style").remove(),
            this.jsPsych.finishTrial(e),
            a();
        },
        u = () => {
          y(), (c = Math.round(performance.now() - h));
          var e = `
          <style id="webgazer-center-style">
            #webgazerVideoContainer { top: 20px !important; left: calc(50% - 160px) !important;}
          </style>
        `;
          document.querySelector("head").insertAdjacentHTML("beforeend", e);
          var d = `
          <div id='webgazer-init-container' style='position: relative; width:100vw; height:100vh'>
          </div>`;
          (s.innerHTML = d), t.showVideo(), t.resume();
          var w = s.querySelector("#webgazer-init-container");
          if (
            ((w.innerHTML = `
          <div style='position: absolute; top: max(260px, 40%); left: calc(50% - 400px); width:800px;'>
          ${n.instructions}
          <button id='jspsych-wg-cont' class='jspsych-btn' disabled>${n.button_text}</button>
          </div>`),
            m())
          )
            document.querySelector("#jspsych-wg-cont").disabled = !1;
          else {
            var o = new MutationObserver(g);
            o.observe(document, { attributes: !0, attributeFilter: ["style"], subtree: !0 });
          }
          document.querySelector("#jspsych-wg-cont").addEventListener("click", () => {
            o && o.disconnect(), b();
          });
        };
      t.isInitialized()
        ? u()
        : t
            .start()
            .then(() => {
              u();
            })
            .catch((e) => {
              console.log(e),
                (s.innerHTML = `<p>The experiment cannot continue because the eye tracker failed to start.</p>
              <p>This may be because of a technical problem or because you did not grant permission for the page to use your camera.</p>`);
            });
      function m() {
        return document.querySelector("#webgazerFaceFeedbackBox")
          ? document.querySelector("#webgazerFaceFeedbackBox").style.borderColor == "green"
          : !1;
      }
      function g(e, d) {
        e[0].target == document.querySelector("#webgazerFaceFeedbackBox") &&
          (e[0].type == "attributes" &&
            e[0].target.style.borderColor == "green" &&
            (document.querySelector("#jspsych-wg-cont").disabled = !1),
          e[0].type == "attributes" &&
            e[0].target.style.borderColor == "red" &&
            (document.querySelector("#jspsych-wg-cont").disabled = !0));
      }
      return new Promise((e) => {
        a = e;
      });
    }
  }
  return (i.info = l), i;
})(jsPsychModule);
//# sourceMappingURL=index.browser.min.js.map
