{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["import type WebGazerExtension from \"@jspsych/extension-webgazer\";\nimport { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nimport { version } from \"../package.json\";\n\nconst info = <const>{\n  name: \"webgazer-init-camera\",\n  version: version,\n  parameters: {\n    /** Instructions for the participant to follow. */\n    instructions: {\n      type: ParameterType.HTML_STRING,\n      default: `\n            <p>Position your head so that the webcam has a good view of your eyes.</p>\n            <p>Center your face in the box and look directly towards the camera.</p>\n            <p>It is important that you try and keep your head reasonably still throughout the experiment, so please take a moment to adjust your setup to be comfortable.</p>\n            <p>When your face is centered in the box and the box is green, you can click to continue.</p>`,\n    },\n    /** The text for the button that participants click to end the trial. */\n    button_text: {\n      type: ParameterType.STRING,\n      default: \"Continue\",\n    },\n  },\n  data: {\n    /** The time it took for webgazer to initialize. This can be a long time in some situations, so this\n     * value is recorded for troubleshooting when participants are reporting difficulty.\n     */\n    load_time: {\n      type: ParameterType.INT,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * This plugin initializes the camera and helps the participant center their face in the camera view for\n * using the the [WebGazer extension](../extensions/webgazer.md). For a narrative description of eye\n * tracking with jsPsych, see the [eye tracking overview](../overview/eye-tracking.md).\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/latest/plugins/webgazer-init-camera/ webgazer-init-camera plugin} and\n * {@link https://www.jspsych.org/latest/overview/eye-tracking/ eye-tracking overview} documentation on jspsych.org\n */\nclass WebgazerInitCameraPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>, on_load: () => void) {\n    const extension = this.jsPsych.extensions.webgazer as WebGazerExtension;\n\n    let trial_complete;\n\n    var start_time = performance.now();\n    var load_time: number;\n\n    // function to end trial when it is time\n    const end_trial = () => {\n      extension.pause();\n      extension.hideVideo();\n\n      // gather the data to store for the trial\n      var trial_data = {\n        load_time: load_time,\n      };\n\n      document.querySelector(\"#webgazer-center-style\").remove();\n\n      // move on to the next trial\n      this.jsPsych.finishTrial(trial_data);\n\n      trial_complete();\n    };\n\n    const showTrial = () => {\n      on_load();\n\n      load_time = Math.round(performance.now() - start_time);\n\n      var style = `\n          <style id=\"webgazer-center-style\">\n            #webgazerVideoContainer { top: 20px !important; left: calc(50% - 160px) !important;}\n          </style>\n        `;\n      document.querySelector(\"head\").insertAdjacentHTML(\"beforeend\", style);\n\n      var html = `\n          <div id='webgazer-init-container' style='position: relative; width:100vw; height:100vh'>\n          </div>`;\n\n      display_element.innerHTML = html;\n\n      extension.showVideo();\n      extension.resume();\n\n      var wg_container = display_element.querySelector(\"#webgazer-init-container\");\n\n      wg_container.innerHTML = `\n          <div style='position: absolute; top: max(260px, 40%); left: calc(50% - 400px); width:800px;'>\n          ${trial.instructions}\n          <button id='jspsych-wg-cont' class='jspsych-btn' disabled>${trial.button_text}</button>\n          </div>`;\n\n      if (is_face_detect_green()) {\n        (document.querySelector(\"#jspsych-wg-cont\") as HTMLButtonElement).disabled = false;\n      } else {\n        var observer = new MutationObserver(face_detect_event_observer);\n        observer.observe(document, {\n          attributes: true,\n          attributeFilter: [\"style\"],\n          subtree: true,\n        });\n      }\n\n      document.querySelector(\"#jspsych-wg-cont\").addEventListener(\"click\", () => {\n        if (observer) {\n          observer.disconnect();\n        }\n        end_trial();\n      });\n    };\n\n    if (!extension.isInitialized()) {\n      extension\n        .start()\n        .then(() => {\n          showTrial();\n        })\n        .catch((error) => {\n          console.log(error);\n          display_element.innerHTML = `<p>The experiment cannot continue because the eye tracker failed to start.</p>\n              <p>This may be because of a technical problem or because you did not grant permission for the page to use your camera.</p>`;\n        });\n    } else {\n      showTrial();\n    }\n\n    function is_face_detect_green() {\n      if (document.querySelector(\"#webgazerFaceFeedbackBox\")) {\n        return (\n          (document.querySelector(\"#webgazerFaceFeedbackBox\") as HTMLElement).style.borderColor ==\n          \"green\"\n        );\n      } else {\n        return false;\n      }\n    }\n\n    function face_detect_event_observer(mutationsList, observer) {\n      if (mutationsList[0].target == document.querySelector(\"#webgazerFaceFeedbackBox\")) {\n        if (\n          mutationsList[0].type == \"attributes\" &&\n          mutationsList[0].target.style.borderColor == \"green\"\n        ) {\n          (document.querySelector(\"#jspsych-wg-cont\") as HTMLButtonElement).disabled = false;\n        }\n        if (\n          mutationsList[0].type == \"attributes\" &&\n          mutationsList[0].target.style.borderColor == \"red\"\n        ) {\n          (document.querySelector(\"#jspsych-wg-cont\") as HTMLButtonElement).disabled = true;\n        }\n      }\n    }\n\n    return new Promise((resolve) => {\n      trial_complete = resolve;\n    });\n  }\n}\n\nexport default WebgazerInitCameraPlugin;\n"],"names":["version","ParameterType"],"mappings":"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"}