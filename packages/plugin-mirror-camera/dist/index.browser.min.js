var jsPsychMirrorCamera = (function (r) {
  "use strict";
  var i = {
    name: "@jspsych/plugin-mirror-camera",
    version: "2.0.0",
    description: "jsPsych plugin for showing a live feed of the user's camera",
    type: "module",
    main: "dist/index.cjs",
    exports: { import: "./dist/index.js", require: "./dist/index.cjs" },
    typings: "dist/index.d.ts",
    unpkg: "dist/index.browser.min.js",
    files: ["src", "dist"],
    source: "src/index.ts",
    scripts: {
      test: "jest --passWithNoTests",
      "test:watch": "npm test -- --watch",
      tsc: "tsc",
      build: "rollup --config",
      "build:watch": "npm run build -- --watch",
    },
    repository: {
      type: "git",
      url: "git+https://github.com/jspsych/jsPsych.git",
      directory: "packages/plugin-mirror-camera",
    },
    author: "Josh de Leeuw",
    license: "MIT",
    bugs: { url: "https://github.com/jspsych/jsPsych/issues" },
    homepage: "https://www.jspsych.org/latest/plugins/mirror-camera",
    peerDependencies: { jspsych: ">=7.2.0" },
    devDependencies: { "@jspsych/config": "^3.0.0", "@jspsych/test-utils": "^1.2.0" },
  };
  const a = {
    name: "mirror-camera",
    version: i.version,
    parameters: {
      prompt: { type: r.ParameterType.HTML_STRING, default: null },
      button_label: { type: r.ParameterType.STRING, default: "Continue" },
      height: { type: r.ParameterType.INT, default: null },
      width: { type: r.ParameterType.INT, default: null },
      mirror_camera: { type: r.ParameterType.BOOL, default: !0 },
    },
    data: { rt: { type: r.ParameterType.INT } },
  };
  class s {
    constructor(t) {
      this.jsPsych = t;
    }
    trial(t, e) {
      (this.stream = this.jsPsych.pluginAPI.getCameraStream()),
        (t.innerHTML = `
      <video autoplay playsinline id="jspsych-mirror-camera-video" width="${
        e.width ? e.width : "auto"
      }" height="${e.height ? e.height : "auto"}" ${
          e.mirror_camera ? 'style="transform: rotateY(180deg);"' : ""
        }></video>
      ${e.prompt ? `<div id="jspsych-mirror-camera-prompt">${e.prompt}</div>` : ""}
      <p><button class="jspsych-btn" id="btn-continue">${e.button_label}</button></p>
    `),
        (t.querySelector("#jspsych-mirror-camera-video").srcObject = this.stream),
        t.querySelector("#btn-continue").addEventListener("click", () => {
          this.finish(t);
        }),
        (this.start_time = performance.now());
    }
    finish(t) {
      this.jsPsych.finishTrial({ rt: performance.now() - this.start_time });
    }
  }
  return (s.info = a), s;
})(jsPsychModule);
//# sourceMappingURL=index.browser.min.js.map
