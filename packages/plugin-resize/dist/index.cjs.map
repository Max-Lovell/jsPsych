{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nimport { version } from \"../package.json\";\n\nconst info = <const>{\n  name: \"resize\",\n  version: version,\n  parameters: {\n    /** The height of the item to be measured. Any units can be used\n     * as long as you are consistent with using the same units for\n     * all parameters. */\n    item_height: {\n      type: ParameterType.INT,\n      default: 1,\n    },\n    /** The width of the item to be measured. */\n    item_width: {\n      type: ParameterType.INT,\n      default: 1,\n    },\n    /** The content displayed below the resizable box and above the button. */\n    prompt: {\n      type: ParameterType.HTML_STRING,\n      default: null,\n    },\n    /** After the scaling factor is applied, this many pixels will equal one unit of measurement. */\n    pixels_per_unit: {\n      type: ParameterType.INT,\n      default: 100,\n    },\n    /** The initial size of the box, in pixels, along the largest dimension.\n     * The aspect ratio will be set automatically to match the item width and height. */\n    starting_size: {\n      type: ParameterType.INT,\n      default: 100,\n    },\n    /** Label to display on the button to complete calibration. */\n    button_label: {\n      type: ParameterType.STRING,\n      default: \"Continue\",\n    },\n  },\n  data: {\n    /** Final width of the resizable div container, in pixels. */\n    final_width_px: {\n      type: ParameterType.INT,\n    },\n    /** Scaling factor that will be applied to the div containing jsPsych content. */\n    scale_factor: {\n      type: ParameterType.FLOAT,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n *\n * This plugin displays a resizable div container that allows the user to drag until the container is the same size as the\n * item being measured. Once the user measures the item as close as possible, clicking the button sets a scaling factor\n * for the div containing jsPsych content. This causes the stimuli that follow to have a known size, independent of monitor resolution.\n *\n * @author Steve Chao\n * @see {@link https://www.jspsych.org/latest/plugins/resize/ resize plugin documentation on jspsych.org}\n */\nclass ResizePlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    var aspect_ratio = trial.item_width / trial.item_height;\n\n    // variables to determine div size\n    if (trial.item_width >= trial.item_height) {\n      var start_div_width = trial.starting_size as number;\n      var start_div_height = Math.round(trial.starting_size / aspect_ratio);\n    } else {\n      var start_div_height = trial.starting_size as number;\n      var start_div_width = Math.round(trial.starting_size * aspect_ratio);\n    }\n\n    // create html for display\n    var html =\n      '<div id=\"jspsych-resize-div\" style=\"border: 2px solid steelblue; height: ' +\n      start_div_height +\n      \"px; width:\" +\n      start_div_width +\n      'px; margin: 7px auto; background-color: lightsteelblue; position: relative;\">';\n    html +=\n      '<div id=\"jspsych-resize-handle\" style=\"cursor: nwse-resize; background-color: steelblue; width: 10px; height: 10px; border: 2px solid lightsteelblue; position: absolute; bottom: 0; right: 0;\"></div>';\n    html += \"</div>\";\n    if (trial.prompt !== null) {\n      html += trial.prompt;\n    }\n    html += '<a class=\"jspsych-btn\" id=\"jspsych-resize-btn\">' + trial.button_label + \"</a>\";\n\n    // render\n    display_element.innerHTML = html;\n\n    // function to end trial\n    const end_trial = () => {\n      // clear document event listeners\n      document.removeEventListener(\"mousemove\", resizeevent);\n      document.removeEventListener(\"mouseup\", mouseupevent);\n\n      // finishes trial\n\n      var trial_data = {\n        final_height_px: final_height_px,\n        final_width_px: final_width_px,\n        scale_factor: scale_factor,\n      };\n\n      this.jsPsych.finishTrial(trial_data);\n    };\n\n    // listens for the click\n    document.getElementById(\"jspsych-resize-btn\").addEventListener(\"click\", () => {\n      scale();\n      end_trial();\n    });\n\n    var dragging = false;\n    var origin_x, origin_y;\n    var cx, cy;\n\n    var mousedownevent = (e) => {\n      e.preventDefault();\n      dragging = true;\n      origin_x = e.pageX;\n      origin_y = e.pageY;\n      cx = parseInt(scale_div.style.width);\n      cy = parseInt(scale_div.style.height);\n    };\n\n    display_element\n      .querySelector(\"#jspsych-resize-handle\")\n      .addEventListener(\"mousedown\", mousedownevent);\n\n    var mouseupevent = (e) => {\n      dragging = false;\n    };\n\n    document.addEventListener(\"mouseup\", mouseupevent);\n\n    var scale_div: HTMLDivElement = display_element.querySelector(\"#jspsych-resize-div\");\n\n    var resizeevent = (e) => {\n      if (dragging) {\n        var dx = e.pageX - origin_x;\n        var dy = e.pageY - origin_y;\n\n        if (Math.abs(dx) >= Math.abs(dy)) {\n          scale_div.style.width = Math.round(Math.max(20, cx + dx * 2)) + \"px\";\n          scale_div.style.height = Math.round(Math.max(20, cx + dx * 2) / aspect_ratio) + \"px\";\n        } else {\n          scale_div.style.height = Math.round(Math.max(20, cy + dy * 2)) + \"px\";\n          scale_div.style.width = Math.round(aspect_ratio * Math.max(20, cy + dy * 2)) + \"px\";\n        }\n      }\n    };\n\n    document.addEventListener(\"mousemove\", resizeevent);\n\n    // scales the stimulus\n    var scale_factor;\n    var final_height_px, final_width_px;\n    function scale() {\n      final_width_px = scale_div.offsetWidth;\n      //final_height_px = scale_div.offsetHeight;\n\n      var pixels_unit_screen = final_width_px / trial.item_width;\n\n      scale_factor = pixels_unit_screen / trial.pixels_per_unit;\n      document.getElementById(\"jspsych-content\").style.transform = \"scale(\" + scale_factor + \")\";\n    }\n  }\n}\n\nexport default ResizePlugin;\n"],"names":["version","ParameterType"],"mappings":"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"}