{"version":3,"file":"index.browser.min.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nimport { version } from \"../package.json\";\n\nconst info = <const>{\n  name: \"resize\",\n  version: version,\n  parameters: {\n    /** The height of the item to be measured. Any units can be used\n     * as long as you are consistent with using the same units for\n     * all parameters. */\n    item_height: {\n      type: ParameterType.INT,\n      default: 1,\n    },\n    /** The width of the item to be measured. */\n    item_width: {\n      type: ParameterType.INT,\n      default: 1,\n    },\n    /** The content displayed below the resizable box and above the button. */\n    prompt: {\n      type: ParameterType.HTML_STRING,\n      default: null,\n    },\n    /** After the scaling factor is applied, this many pixels will equal one unit of measurement. */\n    pixels_per_unit: {\n      type: ParameterType.INT,\n      default: 100,\n    },\n    /** The initial size of the box, in pixels, along the largest dimension.\n     * The aspect ratio will be set automatically to match the item width and height. */\n    starting_size: {\n      type: ParameterType.INT,\n      default: 100,\n    },\n    /** Label to display on the button to complete calibration. */\n    button_label: {\n      type: ParameterType.STRING,\n      default: \"Continue\",\n    },\n  },\n  data: {\n    /** Final width of the resizable div container, in pixels. */\n    final_width_px: {\n      type: ParameterType.INT,\n    },\n    /** Scaling factor that will be applied to the div containing jsPsych content. */\n    scale_factor: {\n      type: ParameterType.FLOAT,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n *\n * This plugin displays a resizable div container that allows the user to drag until the container is the same size as the\n * item being measured. Once the user measures the item as close as possible, clicking the button sets a scaling factor\n * for the div containing jsPsych content. This causes the stimuli that follow to have a known size, independent of monitor resolution.\n *\n * @author Steve Chao\n * @see {@link https://www.jspsych.org/latest/plugins/resize/ resize plugin documentation on jspsych.org}\n */\nclass ResizePlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    var aspect_ratio = trial.item_width / trial.item_height;\n\n    // variables to determine div size\n    if (trial.item_width >= trial.item_height) {\n      var start_div_width = trial.starting_size as number;\n      var start_div_height = Math.round(trial.starting_size / aspect_ratio);\n    } else {\n      var start_div_height = trial.starting_size as number;\n      var start_div_width = Math.round(trial.starting_size * aspect_ratio);\n    }\n\n    // create html for display\n    var html =\n      '<div id=\"jspsych-resize-div\" style=\"border: 2px solid steelblue; height: ' +\n      start_div_height +\n      \"px; width:\" +\n      start_div_width +\n      'px; margin: 7px auto; background-color: lightsteelblue; position: relative;\">';\n    html +=\n      '<div id=\"jspsych-resize-handle\" style=\"cursor: nwse-resize; background-color: steelblue; width: 10px; height: 10px; border: 2px solid lightsteelblue; position: absolute; bottom: 0; right: 0;\"></div>';\n    html += \"</div>\";\n    if (trial.prompt !== null) {\n      html += trial.prompt;\n    }\n    html += '<a class=\"jspsych-btn\" id=\"jspsych-resize-btn\">' + trial.button_label + \"</a>\";\n\n    // render\n    display_element.innerHTML = html;\n\n    // function to end trial\n    const end_trial = () => {\n      // clear document event listeners\n      document.removeEventListener(\"mousemove\", resizeevent);\n      document.removeEventListener(\"mouseup\", mouseupevent);\n\n      // finishes trial\n\n      var trial_data = {\n        final_height_px: final_height_px,\n        final_width_px: final_width_px,\n        scale_factor: scale_factor,\n      };\n\n      this.jsPsych.finishTrial(trial_data);\n    };\n\n    // listens for the click\n    document.getElementById(\"jspsych-resize-btn\").addEventListener(\"click\", () => {\n      scale();\n      end_trial();\n    });\n\n    var dragging = false;\n    var origin_x, origin_y;\n    var cx, cy;\n\n    var mousedownevent = (e) => {\n      e.preventDefault();\n      dragging = true;\n      origin_x = e.pageX;\n      origin_y = e.pageY;\n      cx = parseInt(scale_div.style.width);\n      cy = parseInt(scale_div.style.height);\n    };\n\n    display_element\n      .querySelector(\"#jspsych-resize-handle\")\n      .addEventListener(\"mousedown\", mousedownevent);\n\n    var mouseupevent = (e) => {\n      dragging = false;\n    };\n\n    document.addEventListener(\"mouseup\", mouseupevent);\n\n    var scale_div: HTMLDivElement = display_element.querySelector(\"#jspsych-resize-div\");\n\n    var resizeevent = (e) => {\n      if (dragging) {\n        var dx = e.pageX - origin_x;\n        var dy = e.pageY - origin_y;\n\n        if (Math.abs(dx) >= Math.abs(dy)) {\n          scale_div.style.width = Math.round(Math.max(20, cx + dx * 2)) + \"px\";\n          scale_div.style.height = Math.round(Math.max(20, cx + dx * 2) / aspect_ratio) + \"px\";\n        } else {\n          scale_div.style.height = Math.round(Math.max(20, cy + dy * 2)) + \"px\";\n          scale_div.style.width = Math.round(aspect_ratio * Math.max(20, cy + dy * 2)) + \"px\";\n        }\n      }\n    };\n\n    document.addEventListener(\"mousemove\", resizeevent);\n\n    // scales the stimulus\n    var scale_factor;\n    var final_height_px, final_width_px;\n    function scale() {\n      final_width_px = scale_div.offsetWidth;\n      //final_height_px = scale_div.offsetHeight;\n\n      var pixels_unit_screen = final_width_px / trial.item_width;\n\n      scale_factor = pixels_unit_screen / trial.pixels_per_unit;\n      document.getElementById(\"jspsych-content\").style.transform = \"scale(\" + scale_factor + \")\";\n    }\n  }\n}\n\nexport default ResizePlugin;\n"],"names":["info","version","ParameterType","ResizePlugin","jsPsych","display_element","trial","aspect_ratio","start_div_width","start_div_height","html","end_trial","resizeevent","mouseupevent","trial_data","final_height_px","final_width_px","scale_factor","scale","dragging","origin_x","origin_y","cx","cy","mousedownevent","e","scale_div","dx","dy","pixels_unit_screen"],"mappings":"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"}