{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import autoBind from \"auto-bind\";\nimport { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nimport { AudioPlayerInterface } from \"../../jspsych/src/modules/plugin-api/AudioPlayer\";\nimport { version } from \"../package.json\";\n\nconst info = <const>{\n  name: \"audio-slider-response\",\n  version: version,\n  parameters: {\n    /** Audio file to be played. */\n    stimulus: {\n      type: ParameterType.AUDIO,\n      default: undefined,\n    },\n    /** Sets the minimum value of the slider. */\n    min: {\n      type: ParameterType.INT,\n      default: 0,\n    },\n    /** Sets the maximum value of the slider */\n    max: {\n      type: ParameterType.INT,\n      default: 100,\n    },\n    /** Sets the starting value of the slider */\n    slider_start: {\n      type: ParameterType.INT,\n      default: 50,\n    },\n    /** Sets the step of the slider. This is the smallest amount by which the slider can change. */\n    step: {\n      type: ParameterType.INT,\n      default: 1,\n    },\n    /** Labels displayed at equidistant locations on the slider. For example, two labels will be placed at the ends of the\n     * slider. Three labels would place two at the ends and one in the middle. Four will place two at the ends, and the\n     * other two will be at 33% and 67% of the slider width.\n     */\n    labels: {\n      type: ParameterType.HTML_STRING,\n      default: [],\n      array: true,\n    },\n    /** Set the width of the slider in pixels. If left null, then the width will be equal to the widest element in the display. */\n    slider_width: {\n      type: ParameterType.INT,\n      default: null,\n    },\n    /** Label of the button to end the trial. */\n    button_label: {\n      type: ParameterType.STRING,\n      default: \"Continue\",\n      array: false,\n    },\n    /** If true, the participant must move the slider before clicking the continue button. */\n    require_movement: {\n      type: ParameterType.BOOL,\n      default: false,\n    },\n    /** This string can contain HTML markup. Any content here will be displayed below the stimulus. The intention is\n     * that it can be used to provide a reminder about the action the participant is supposed to take (e.g., which key to press).\n     */\n    prompt: {\n      type: ParameterType.HTML_STRING,\n      default: null,\n    },\n    /** How long to wait for the participant to make a response before ending the trial in milliseconds. If\n     * the participant fails to make a response before this timer is reached, the participant's response will be\n     * recorded as null for the trial and the trial will end. If the value of this parameter is null, then the trial\n     * will wait for a response indefinitely.\n     */\n    trial_duration: {\n      type: ParameterType.INT,\n      default: null,\n    },\n    /** If true, then the trial will end whenever the participant makes a response (assuming they make their response\n     * before the cutoff specified by the `trial_duration` parameter). If false, then the trial will continue until the\n     * value for `trial_duration` is reached. You can set this parameter to `false` to force the participant to listen to\n     * the stimulus for a fixed amount of time, even if they respond before the time is complete.\n     */\n    response_ends_trial: {\n      type: ParameterType.BOOL,\n      default: true,\n    },\n    /** If true, then the trial will end as soon as the audio file finishes playing. */\n    trial_ends_after_audio: {\n      type: ParameterType.BOOL,\n      default: false,\n    },\n    /** If true, then responses are allowed while the audio is playing. If false, then the audio must finish playing before\n     * the slider is enabled and the trial can end via the next button click. Once the audio has played all the way through,\n     * the slider is enabled and a response is allowed (including while the audio is being re-played via on-screen playback controls).\n     */\n    response_allowed_while_playing: {\n      type: ParameterType.BOOL,\n      default: true,\n    },\n  },\n  data: {\n    /** The numeric value of the slider. */\n    response: {\n      type: ParameterType.INT,\n    },\n    /** The time in milliseconds for the participant to make a response. The time is measured from when the stimulus first\n     * began playing until the participant's response.\n     */\n    rt: {\n      type: ParameterType.INT,\n    },\n    /** The path of the audio file that was played. */\n    stimulus: {\n      type: ParameterType.STRING,\n    },\n    /** The starting value of the slider. */\n    slider_start: {\n      type: ParameterType.INT,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * This plugin plays an audio file and allows the participant to respond by dragging a slider.\n *\n * If the browser supports it, audio files are played using the WebAudio API. This allows for reasonably precise timing of the\n * playback. The timing of responses generated is measured against the WebAudio specific clock, improving the measurement of\n * response times. If the browser does not support the WebAudio API, then the audio file is played with HTML5 audio.\n *\n * Audio files can be automatically preloaded by jsPsych using the [`preload` plugin](preload.md). However, if you are using\n * timeline variables or another dynamic method to specify the audio stimulus, then you will need\n * to [manually preload](../overview/media-preloading.md#manual-preloading) the audio.\n *\n * The trial can end when the participant responds, or if the participant has failed to respond within a fixed length of time. You can also prevent the slider response from being made before the audio has finished playing.\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/latest/plugins/audio-slider-response/ audio-slider-response plugin documentation on jspsych.org}\n */\nclass AudioSliderResponsePlugin implements JsPsychPlugin<Info> {\n  static info = info;\n  private audio: AudioPlayerInterface;\n  private context: AudioContext;\n  private params: TrialType<Info>;\n  private display: HTMLElement;\n  private response: { rt: number; response: number } = { rt: null, response: null };\n  private startTime: number;\n  private half_thumb_width: number;\n  private trial_complete: (trial_data: {\n    rt: number;\n    slider_start: number;\n    response: number;\n  }) => void;\n\n  constructor(private jsPsych: JsPsych) {\n    autoBind(this);\n  }\n\n  async trial(display_element: HTMLElement, trial: TrialType<Info>, on_load: () => void) {\n    this.params = trial;\n    this.display = display_element;\n    // for storing data related to response\n    this.response;\n    // half of the thumb width value from jspsych.css, used to adjust the label positions\n    this.half_thumb_width = 7.5;\n    // hold the .resolve() function from the Promise that ends the trial\n    this.trial_complete;\n\n    // setup stimulus\n    this.context = this.jsPsych.pluginAPI.audioContext();\n\n    // load audio file\n    this.audio = await this.jsPsych.pluginAPI.getAudioPlayer(trial.stimulus);\n\n    this.setupTrial();\n\n    on_load();\n\n    return new Promise((resolve) => {\n      this.trial_complete = resolve;\n    });\n  }\n\n  // to enable slider after audio ends\n  private enable_slider() {\n    document.querySelector<HTMLInputElement>(\"#jspsych-audio-slider-response-response\").disabled =\n      false;\n    if (!this.params.require_movement) {\n      document.querySelector<HTMLButtonElement>(\"#jspsych-audio-slider-response-next\").disabled =\n        false;\n    }\n  }\n\n  private setupTrial = () => {\n    // set up end event if trial needs it\n    if (this.params.trial_ends_after_audio) {\n      this.audio.addEventListener(\"ended\", this.end_trial);\n    }\n\n    // enable slider after audio ends if necessary\n    if (!this.params.response_allowed_while_playing && !this.params.trial_ends_after_audio) {\n      this.audio.addEventListener(\"ended\", this.enable_slider);\n    }\n\n    var html = '<div id=\"jspsych-audio-slider-response-wrapper\" style=\"margin: 100px 0px;\">';\n    html +=\n      '<div class=\"jspsych-audio-slider-response-container\" style=\"position:relative; margin: 0 auto 3em auto; width:';\n    if (this.params.slider_width !== null) {\n      html += this.params.slider_width + \"px;\";\n    } else {\n      html += \"auto;\";\n    }\n    html += '\">';\n    html +=\n      '<input type=\"range\" class=\"jspsych-slider\" value=\"' +\n      this.params.slider_start +\n      '\" min=\"' +\n      this.params.min +\n      '\" max=\"' +\n      this.params.max +\n      '\" step=\"' +\n      this.params.step +\n      '\" id=\"jspsych-audio-slider-response-response\"';\n    if (!this.params.response_allowed_while_playing) {\n      html += \" disabled\";\n    }\n    html += \"></input><div>\";\n    for (var j = 0; j < this.params.labels.length; j++) {\n      var label_width_perc = 100 / (this.params.labels.length - 1);\n      var percent_of_range = j * (100 / (this.params.labels.length - 1));\n      var percent_dist_from_center = ((percent_of_range - 50) / 50) * 100;\n      var offset = (percent_dist_from_center * this.half_thumb_width) / 100;\n      html +=\n        '<div style=\"border: 1px solid transparent; display: inline-block; position: absolute; ' +\n        \"left:calc(\" +\n        percent_of_range +\n        \"% - (\" +\n        label_width_perc +\n        \"% / 2) - \" +\n        offset +\n        \"px); text-align: center; width: \" +\n        label_width_perc +\n        '%;\">';\n      html +=\n        '<span style=\"text-align: center; font-size: 80%;\">' + this.params.labels[j] + \"</span>\";\n      html += \"</div>\";\n    }\n    html += \"</div>\";\n    html += \"</div>\";\n    html += \"</div>\";\n\n    if (this.params.prompt !== null) {\n      html += this.params.prompt;\n    }\n\n    // add submit button\n    var next_disabled_attribute = \"\";\n    if (this.params.require_movement || !this.params.response_allowed_while_playing) {\n      next_disabled_attribute = \"disabled\";\n    }\n    html +=\n      '<button id=\"jspsych-audio-slider-response-next\" class=\"jspsych-btn\" ' +\n      next_disabled_attribute +\n      \">\" +\n      this.params.button_label +\n      \"</button>\";\n\n    this.display.innerHTML = html;\n\n    this.response = {\n      rt: null,\n      response: null,\n    };\n\n    if (!this.params.response_allowed_while_playing) {\n      this.display.querySelector<HTMLInputElement>(\n        \"#jspsych-audio-slider-response-response\"\n      ).disabled = true;\n      this.display.querySelector<HTMLInputElement>(\"#jspsych-audio-slider-response-next\").disabled =\n        true;\n    }\n\n    if (this.params.require_movement) {\n      const enable_button = () => {\n        this.display.querySelector<HTMLInputElement>(\n          \"#jspsych-audio-slider-response-next\"\n        ).disabled = false;\n      };\n\n      this.display\n        .querySelector(\"#jspsych-audio-slider-response-response\")\n        .addEventListener(\"mousedown\", enable_button);\n\n      this.display\n        .querySelector(\"#jspsych-audio-slider-response-response\")\n        .addEventListener(\"touchstart\", enable_button);\n\n      this.display\n        .querySelector(\"#jspsych-audio-slider-response-response\")\n        .addEventListener(\"change\", enable_button);\n    }\n\n    this.display\n      .querySelector(\"#jspsych-audio-slider-response-next\")\n      .addEventListener(\"click\", () => {\n        // measure response time\n        var endTime = performance.now();\n        var rt = Math.round(endTime - this.startTime);\n        if (this.context !== null) {\n          endTime = this.context.currentTime;\n          rt = Math.round((endTime - this.startTime) * 1000);\n        }\n        this.response.rt = rt;\n        this.response.response = this.display.querySelector<HTMLInputElement>(\n          \"#jspsych-audio-slider-response-response\"\n        ).valueAsNumber;\n\n        if (this.params.response_ends_trial) {\n          this.end_trial();\n        } else {\n          this.display.querySelector<HTMLInputElement>(\n            \"#jspsych-audio-slider-response-next\"\n          ).disabled = true;\n        }\n      });\n\n    //record start time\n    this.startTime = performance.now();\n    // record webaudio context start time\n    if (this.context !== null) {\n      this.startTime = this.context.currentTime;\n    }\n\n    // start audio\n    this.audio.play();\n\n    // end trial if trial_duration is set\n    if (this.params.trial_duration !== null) {\n      this.jsPsych.pluginAPI.setTimeout(() => {\n        this.end_trial();\n      }, this.params.trial_duration);\n    }\n  };\n\n  private end_trial = () => {\n    // kill any remaining setTimeout handlers\n    this.jsPsych.pluginAPI.clearAllTimeouts();\n\n    // stop the audio file if it is playing\n    this.audio.stop();\n\n    // remove end event listeners if they exist\n    this.audio.removeEventListener(\"ended\", this.end_trial);\n    this.audio.removeEventListener(\"ended\", this.enable_slider);\n\n    // save data\n    var trialdata = {\n      rt: this.response.rt,\n      stimulus: this.params.stimulus,\n      slider_start: this.params.slider_start,\n      response: this.response.response,\n    };\n\n    this.display.innerHTML = \"\";\n\n    // next trial\n    this.trial_complete(trialdata);\n  };\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    const default_data = {\n      stimulus: trial.stimulus,\n      slider_start: trial.slider_start,\n      response: this.jsPsych.randomization.randomInt(trial.min, trial.max),\n      rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true),\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    const respond = () => {\n      if (data.rt !== null) {\n        const el = display_element.querySelector<HTMLInputElement>(\"input[type='range']\");\n\n        setTimeout(() => {\n          this.jsPsych.pluginAPI.clickTarget(el);\n          el.valueAsNumber = data.response;\n        }, data.rt / 2);\n\n        this.jsPsych.pluginAPI.clickTarget(display_element.querySelector(\"button\"), data.rt);\n      }\n    };\n\n    this.trial(display_element, trial, () => {\n      load_callback();\n\n      if (!trial.response_allowed_while_playing) {\n        this.audio.addEventListener(\"ended\", respond);\n      } else {\n        respond();\n      }\n    });\n  }\n}\n\nexport default AudioSliderResponsePlugin;\n"],"names":["version"],"mappings":"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"}