{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nimport { version } from \"../package.json\";\n\nconst info = <const>{\n  name: \"initialize-camera\",\n  version: version,\n  parameters: {\n    /** The message to display when the user is presented with a dropdown list of available devices. */\n    device_select_message: {\n      type: ParameterType.HTML_STRING,\n      default: `<p>Please select the camera you would like to use.</p>`,\n    },\n    /** The label for the select button. */\n    button_label: {\n      type: ParameterType.STRING,\n      default: \"Use this camera\",\n    },\n    /** Set to `true` to include an audio track in the recordings. */\n    include_audio: {\n      type: ParameterType.BOOL,\n      default: false,\n    },\n    /** Request a specific width for the recording. This is not a guarantee that this width will be used, as it\n     * depends on the capabilities of the participant's device. Learn more about `MediaRecorder` constraints\n     * [here](https://developer.mozilla.org/en-US/docs/Web/API/Media_Streams_API/Constraints#requesting_a_specific_value_for_a_setting). */\n    width: {\n      type: ParameterType.INT,\n      default: null,\n    },\n    /** Request a specific height for the recording. This is not a guarantee that this height will be used, as it\n     * depends on the capabilities of the participant's device. Learn more about `MediaRecorder` constraints\n     * [here](https://developer.mozilla.org/en-US/docs/Web/API/Media_Streams_API/Constraints#requesting_a_specific_value_for_a_setting). */\n    height: {\n      type: ParameterType.INT,\n      default: null,\n    },\n    /** Set this to use a specific [MIME type](https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/mimeType) for the\n     * recording. Set the entire type, e.g., `'video/mp4; codecs=\"avc1.424028, mp4a.40.2\"'`. */\n    mime_type: {\n      type: ParameterType.STRING,\n      default: null,\n    },\n  },\n  data: {\n    /** The [device ID](https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/deviceId) of the selected camera. */\n    device_id: {\n      type: ParameterType.STRING,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * This plugin asks the participant to grant permission to access a camera.\n * If multiple cameras are connected to the participant's device, then it allows the participant to pick which device to use.\n * Once access is granted for an experiment you do not need to get permission again.\n *\n * Once the camera is selected with this plugin it can be accessed with\n * [`jsPsych.pluginAPI.getCameraRecorder()`](../reference/jspsych-pluginAPI.md#getcamerarecorder).\n *\n * !!! warning\n *     When recording from a camera your experiment will need to be running over `https://` protocol. If you try to\n *  run the experiment locally using the `file://` protocol or over `http://` protocol you will not be able to access\n * the microphone because of [potential security problems](https://blog.mozilla.org/webrtc/camera-microphone-require-https-in-firefox-68/).\n *\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/latest/plugins/initialize-camera/ initialize-camera plugin documentation on jspsych.org}\n */\nclass InitializeCameraPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    this.run_trial(display_element, trial).then((id) => {\n      this.jsPsych.finishTrial({\n        device_id: id,\n      });\n    });\n  }\n\n  private async run_trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    await this.askForPermission(trial);\n\n    this.showCameraSelection(display_element, trial);\n\n    this.updateDeviceList(display_element);\n\n    navigator.mediaDevices.ondevicechange = (e) => {\n      this.updateDeviceList(display_element);\n    };\n\n    const camera_id = await this.waitForSelection(display_element);\n\n    const constraints: any = { video: { deviceId: camera_id } };\n\n    if (trial.width) {\n      constraints.video.width = trial.width;\n    }\n    if (trial.height) {\n      constraints.video.height = trial.height;\n    }\n    if (trial.include_audio) {\n      constraints.audio = true;\n    }\n\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n\n    const recorder_options: MediaRecorderOptions = {};\n    if (trial.mime_type) {\n      recorder_options.mimeType = trial.mime_type;\n    }\n\n    this.jsPsych.pluginAPI.initializeCameraRecorder(stream, recorder_options);\n\n    return camera_id;\n  }\n\n  private async askForPermission(trial: TrialType<Info>) {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: trial.include_audio,\n      video: true,\n    });\n    return stream;\n  }\n\n  private showCameraSelection(display_element, trial: TrialType<Info>) {\n    let html = `\n      ${trial.device_select_message}\n      <select name=\"camera\" id=\"which-camera\" style=\"font-size:14px; font-family: 'Open Sans', 'Arial', sans-serif; padding: 4px;\">\n      </select>\n      <p><button class=\"jspsych-btn\" id=\"btn-select-camera\">${trial.button_label}</button></p>`;\n    display_element.innerHTML = html;\n  }\n\n  private waitForSelection(display_element) {\n    return new Promise((resolve) => {\n      display_element.querySelector(\"#btn-select-camera\").addEventListener(\"click\", () => {\n        const camera = display_element.querySelector(\"#which-camera\").value;\n        resolve(camera);\n      });\n    });\n  }\n\n  private updateDeviceList(display_element) {\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\n      const cams = devices.filter(\n        (d) =>\n          d.kind === \"videoinput\" && d.deviceId !== \"default\" && d.deviceId !== \"communications\"\n      );\n\n      // remove entries with duplicate groupID\n      const unique_cameras = cams.filter(\n        (cam, index, arr) => arr.findIndex((v) => v.groupId == cam.groupId) == index\n      );\n\n      // reset the list by clearing all current options\n      display_element.querySelector(\"#which-camera\").innerHTML = \"\";\n\n      unique_cameras.forEach((d) => {\n        let el = document.createElement(\"option\");\n        el.value = d.deviceId;\n        el.innerHTML = d.label;\n\n        display_element.querySelector(\"#which-camera\").appendChild(el);\n      });\n    });\n  }\n}\n\nexport default InitializeCameraPlugin;\n"],"names":["version"],"mappings":"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"}