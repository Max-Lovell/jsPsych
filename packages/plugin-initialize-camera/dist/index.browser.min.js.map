{"version":3,"file":"index.browser.min.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nimport { version } from \"../package.json\";\n\nconst info = <const>{\n  name: \"initialize-camera\",\n  version: version,\n  parameters: {\n    /** The message to display when the user is presented with a dropdown list of available devices. */\n    device_select_message: {\n      type: ParameterType.HTML_STRING,\n      default: `<p>Please select the camera you would like to use.</p>`,\n    },\n    /** The label for the select button. */\n    button_label: {\n      type: ParameterType.STRING,\n      default: \"Use this camera\",\n    },\n    /** Set to `true` to include an audio track in the recordings. */\n    include_audio: {\n      type: ParameterType.BOOL,\n      default: false,\n    },\n    /** Request a specific width for the recording. This is not a guarantee that this width will be used, as it\n     * depends on the capabilities of the participant's device. Learn more about `MediaRecorder` constraints\n     * [here](https://developer.mozilla.org/en-US/docs/Web/API/Media_Streams_API/Constraints#requesting_a_specific_value_for_a_setting). */\n    width: {\n      type: ParameterType.INT,\n      default: null,\n    },\n    /** Request a specific height for the recording. This is not a guarantee that this height will be used, as it\n     * depends on the capabilities of the participant's device. Learn more about `MediaRecorder` constraints\n     * [here](https://developer.mozilla.org/en-US/docs/Web/API/Media_Streams_API/Constraints#requesting_a_specific_value_for_a_setting). */\n    height: {\n      type: ParameterType.INT,\n      default: null,\n    },\n    /** Set this to use a specific [MIME type](https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/mimeType) for the\n     * recording. Set the entire type, e.g., `'video/mp4; codecs=\"avc1.424028, mp4a.40.2\"'`. */\n    mime_type: {\n      type: ParameterType.STRING,\n      default: null,\n    },\n  },\n  data: {\n    /** The [device ID](https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/deviceId) of the selected camera. */\n    device_id: {\n      type: ParameterType.STRING,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * This plugin asks the participant to grant permission to access a camera.\n * If multiple cameras are connected to the participant's device, then it allows the participant to pick which device to use.\n * Once access is granted for an experiment you do not need to get permission again.\n *\n * Once the camera is selected with this plugin it can be accessed with\n * [`jsPsych.pluginAPI.getCameraRecorder()`](../reference/jspsych-pluginAPI.md#getcamerarecorder).\n *\n * !!! warning\n *     When recording from a camera your experiment will need to be running over `https://` protocol. If you try to\n *  run the experiment locally using the `file://` protocol or over `http://` protocol you will not be able to access\n * the microphone because of [potential security problems](https://blog.mozilla.org/webrtc/camera-microphone-require-https-in-firefox-68/).\n *\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/latest/plugins/initialize-camera/ initialize-camera plugin documentation on jspsych.org}\n */\nclass InitializeCameraPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    this.run_trial(display_element, trial).then((id) => {\n      this.jsPsych.finishTrial({\n        device_id: id,\n      });\n    });\n  }\n\n  private async run_trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    await this.askForPermission(trial);\n\n    this.showCameraSelection(display_element, trial);\n\n    this.updateDeviceList(display_element);\n\n    navigator.mediaDevices.ondevicechange = (e) => {\n      this.updateDeviceList(display_element);\n    };\n\n    const camera_id = await this.waitForSelection(display_element);\n\n    const constraints: any = { video: { deviceId: camera_id } };\n\n    if (trial.width) {\n      constraints.video.width = trial.width;\n    }\n    if (trial.height) {\n      constraints.video.height = trial.height;\n    }\n    if (trial.include_audio) {\n      constraints.audio = true;\n    }\n\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n\n    const recorder_options: MediaRecorderOptions = {};\n    if (trial.mime_type) {\n      recorder_options.mimeType = trial.mime_type;\n    }\n\n    this.jsPsych.pluginAPI.initializeCameraRecorder(stream, recorder_options);\n\n    return camera_id;\n  }\n\n  private async askForPermission(trial: TrialType<Info>) {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: trial.include_audio,\n      video: true,\n    });\n    return stream;\n  }\n\n  private showCameraSelection(display_element, trial: TrialType<Info>) {\n    let html = `\n      ${trial.device_select_message}\n      <select name=\"camera\" id=\"which-camera\" style=\"font-size:14px; font-family: 'Open Sans', 'Arial', sans-serif; padding: 4px;\">\n      </select>\n      <p><button class=\"jspsych-btn\" id=\"btn-select-camera\">${trial.button_label}</button></p>`;\n    display_element.innerHTML = html;\n  }\n\n  private waitForSelection(display_element) {\n    return new Promise((resolve) => {\n      display_element.querySelector(\"#btn-select-camera\").addEventListener(\"click\", () => {\n        const camera = display_element.querySelector(\"#which-camera\").value;\n        resolve(camera);\n      });\n    });\n  }\n\n  private updateDeviceList(display_element) {\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\n      const cams = devices.filter(\n        (d) =>\n          d.kind === \"videoinput\" && d.deviceId !== \"default\" && d.deviceId !== \"communications\"\n      );\n\n      // remove entries with duplicate groupID\n      const unique_cameras = cams.filter(\n        (cam, index, arr) => arr.findIndex((v) => v.groupId == cam.groupId) == index\n      );\n\n      // reset the list by clearing all current options\n      display_element.querySelector(\"#which-camera\").innerHTML = \"\";\n\n      unique_cameras.forEach((d) => {\n        let el = document.createElement(\"option\");\n        el.value = d.deviceId;\n        el.innerHTML = d.label;\n\n        display_element.querySelector(\"#which-camera\").appendChild(el);\n      });\n    });\n  }\n}\n\nexport default InitializeCameraPlugin;\n"],"names":["info","version","ParameterType","InitializeCameraPlugin","jsPsych","display_element","trial","id","__async","e","camera_id","constraints","stream","recorder_options","html","resolve","camera","devices","unique_cameras","d","cam","index","arr","v","el"],"mappings":"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"}